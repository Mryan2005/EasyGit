# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master"]
    tags: ["v*"]
  pull_request:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: test function "commit"
        run: |
          ls -a
          rm -rf .git
          git config --global init.defaultBranch "master"
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git init
          touch test.txt
          sudo chmod 777 ./EasyGitTool/main.py
          ./EasyGitTool/main.py test
  Publishing-pypi-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install dependencies
        #if: startsWith(github.ref, 'refs/tags/')
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        #if: startsWith(github.ref, 'refs/tags/')
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo 'ver = V0.'${{ github.run_id }}'.dev'>ver.py
          python setup.py sdist bdist_wheel
          twine upload dist/*
    needs: test
  Publishing-GitHub_Release-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    steps:
      - name: Install dependencies
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          echo 'ver = V0.'${{ github.run_id }}'.dev'>ver.py
          python setup.py sdist bdist_wheel
      - name: Zip the Build
        if: startsWith(github.ref, 'refs/tags/')
        run: zip -r dist.zip ./dist/* ./LICENSE
      - name: Create Release and Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: V0.${{ github.run_id }}.dev
          name: V0.${{ github.run_id }}.dev
          body: TODO New Release.
          draft: false
          prerelease: true
          files: |
            dist.zip
            LICENSE
    needs: test